

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Jul 11 19:01:30 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1938
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	dabs	1,0x7E,2
     9  0000                     
    10                           ; Version 1.45
    11                           ; Generated 16/11/2017 GMT
    12                           ; 
    13                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution.
    27                           ; 
    28                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    29                           ;        software without specific prior written permission.
    30                           ; 
    31                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    32                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    33                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    34                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    35                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    36                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    37                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    38                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    39                           ; 
    40                           ; 
    41                           ; Code-generator required, PIC16F1938 Definitions
    42                           ; 
    43                           ; SFR Addresses
    44  0000                     	;# 
    45  0001                     	;# 
    46  0002                     	;# 
    47  0003                     	;# 
    48  0004                     	;# 
    49  0005                     	;# 
    50  0006                     	;# 
    51  0007                     	;# 
    52  0008                     	;# 
    53  0009                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  000C                     	;# 
    57  000D                     	;# 
    58  000E                     	;# 
    59  0010                     	;# 
    60  0011                     	;# 
    61  0012                     	;# 
    62  0013                     	;# 
    63  0015                     	;# 
    64  0016                     	;# 
    65  0016                     	;# 
    66  0017                     	;# 
    67  0018                     	;# 
    68  0019                     	;# 
    69  001A                     	;# 
    70  001B                     	;# 
    71  001C                     	;# 
    72  001E                     	;# 
    73  001F                     	;# 
    74  008C                     	;# 
    75  008D                     	;# 
    76  008E                     	;# 
    77  0090                     	;# 
    78  0091                     	;# 
    79  0092                     	;# 
    80  0093                     	;# 
    81  0095                     	;# 
    82  0096                     	;# 
    83  0097                     	;# 
    84  0098                     	;# 
    85  0099                     	;# 
    86  009A                     	;# 
    87  009B                     	;# 
    88  009B                     	;# 
    89  009C                     	;# 
    90  009D                     	;# 
    91  009E                     	;# 
    92  010C                     	;# 
    93  010D                     	;# 
    94  010E                     	;# 
    95  0110                     	;# 
    96  0111                     	;# 
    97  0112                     	;# 
    98  0113                     	;# 
    99  0114                     	;# 
   100  0115                     	;# 
   101  0116                     	;# 
   102  0117                     	;# 
   103  0118                     	;# 
   104  0119                     	;# 
   105  011A                     	;# 
   106  011B                     	;# 
   107  011D                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0191                     	;# 
   111  0191                     	;# 
   112  0192                     	;# 
   113  0193                     	;# 
   114  0193                     	;# 
   115  0193                     	;# 
   116  0194                     	;# 
   117  0195                     	;# 
   118  0196                     	;# 
   119  0199                     	;# 
   120  019A                     	;# 
   121  019B                     	;# 
   122  019B                     	;# 
   123  019B                     	;# 
   124  019B                     	;# 
   125  019C                     	;# 
   126  019C                     	;# 
   127  019D                     	;# 
   128  019E                     	;# 
   129  019F                     	;# 
   130  020D                     	;# 
   131  0210                     	;# 
   132  0211                     	;# 
   133  0212                     	;# 
   134  0213                     	;# 
   135  0214                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0216                     	;# 
   139  0217                     	;# 
   140  0291                     	;# 
   141  0291                     	;# 
   142  0292                     	;# 
   143  0293                     	;# 
   144  0294                     	;# 
   145  0295                     	;# 
   146  0295                     	;# 
   147  0296                     	;# 
   148  0298                     	;# 
   149  0298                     	;# 
   150  0299                     	;# 
   151  029A                     	;# 
   152  029B                     	;# 
   153  029C                     	;# 
   154  029C                     	;# 
   155  029D                     	;# 
   156  029E                     	;# 
   157  029F                     	;# 
   158  0311                     	;# 
   159  0311                     	;# 
   160  0312                     	;# 
   161  0313                     	;# 
   162  0314                     	;# 
   163  0315                     	;# 
   164  0315                     	;# 
   165  0316                     	;# 
   166  0318                     	;# 
   167  0318                     	;# 
   168  0319                     	;# 
   169  031A                     	;# 
   170  031C                     	;# 
   171  031C                     	;# 
   172  031D                     	;# 
   173  031E                     	;# 
   174  0394                     	;# 
   175  0395                     	;# 
   176  0396                     	;# 
   177  0415                     	;# 
   178  0416                     	;# 
   179  0417                     	;# 
   180  041C                     	;# 
   181  041D                     	;# 
   182  041E                     	;# 
   183  0791                     	;# 
   184  0792                     	;# 
   185  0793                     	;# 
   186  0794                     	;# 
   187  0795                     	;# 
   188  0798                     	;# 
   189  0799                     	;# 
   190  07A0                     	;# 
   191  07A1                     	;# 
   192  07A3                     	;# 
   193  07A4                     	;# 
   194  07A6                     	;# 
   195  07A7                     	;# 
   196  07A9                     	;# 
   197  07AA                     	;# 
   198  0FE4                     	;# 
   199  0FE5                     	;# 
   200  0FE6                     	;# 
   201  0FE7                     	;# 
   202  0FE8                     	;# 
   203  0FE9                     	;# 
   204  0FEA                     	;# 
   205  0FEB                     	;# 
   206  0FED                     	;# 
   207  0FEE                     	;# 
   208  0FEF                     	;# 
   209  000E                     _PORTC	set	14
   210  000D                     _PORTB	set	13
   211  000C                     _PORTA	set	12
   212  006F                     _RB7	set	111
   213  008E                     _TRISC	set	142
   214  008D                     _TRISB	set	141
   215  008C                     _TRISA	set	140
   216  0095                     _OPTION_REG	set	149
   217  0099                     _OSCCON	set	153
   218  018D                     _ANSELB	set	397
   219  018C                     _ANSELA	set	396
   220  020D                     _WPUB	set	525
   221                           
   222                           ; #config settings
   223  0000                     
   224                           	psect	cinit
   225  07FD                     start_initialization:	
   226  07FD                     __initialization:	
   227  07FD                     end_of_initialization:	
   228                           ;End of C runtime variable initialization code
   229                           
   230  07FD                     __end_of__initialization:	
   231  07FD  0020               	movlb	0
   232  07FE  3187  2F63         	ljmp	_main	;jump to C main() function
   233                           
   234                           	psect	cstackCOMMON
   235  0070                     __pcstackCOMMON:	
   236  0070                     ?_Delay_ms:	
   237  0070                     ?_main:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0070                     Delay_ms@DELAY_CNT:	
   241                           ; 1 bytes @ 0x0
   242                           
   243                           
   244                           ; 2 bytes @ 0x0
   245  0070                     	ds	2
   246  0072                     ??_Delay_ms:	
   247                           
   248                           ; 1 bytes @ 0x2
   249  0072                     	ds	1
   250  0073                     Delay_ms@i:	
   251                           
   252                           ; 2 bytes @ 0x3
   253  0073                     	ds	2
   254  0075                     ??_main:	
   255                           
   256                           ; 1 bytes @ 0x5
   257  0075                     	ds	1
   258  0076                     main@t:	
   259                           
   260                           ; 4 bytes @ 0x6
   261  0076                     	ds	4
   262  007A                     main@j:	
   263                           
   264                           ; 2 bytes @ 0xA
   265  007A                     	ds	2
   266  007C                     main@i:	
   267                           
   268                           ; 2 bytes @ 0xC
   269  007C                     	ds	2
   270                           
   271                           	psect	maintext
   272  0763                     __pmaintext:	
   273 ;;
   274 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   275 ;;
   276 ;; *************** function _main *****************
   277 ;; Defined at:
   278 ;;		line 50 in file "usb_switcher.c"
   279 ;; Parameters:    Size  Location     Type
   280 ;;		None
   281 ;; Auto vars:     Size  Location     Type
   282 ;;  t               4    6[COMMON] long 
   283 ;;  i               2   12[COMMON] int 
   284 ;;  j               2   10[COMMON] int 
   285 ;; Return value:  Size  Location     Type
   286 ;;                  1    wreg      void 
   287 ;; Registers used:
   288 ;;		wreg, status,2, status,0, pclath, cstack
   289 ;; Tracked objects:
   290 ;;		On entry : B1F/0
   291 ;;		On exit  : 0/0
   292 ;;		Unchanged: 0/0
   293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   295 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   296 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   297 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   298 ;;Total ram usage:        9 bytes
   299 ;; Hardware stack levels required when called:    1
   300 ;; This function calls:
   301 ;;		_Delay_ms
   302 ;; This function is called by:
   303 ;;		Startup code after reset
   304 ;; This function uses a non-reentrant model
   305 ;;
   306                           
   307                           
   308                           ;psect for function _main
   309  0763                     _main:	
   310                           
   311                           ;usb_switcher.c: 53: int i = 0;
   312                           
   313                           ;incstack = 0
   314                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   315  0763  01FC               	clrf	main@i
   316  0764  01FD               	clrf	main@i+1
   317                           
   318                           ;usb_switcher.c: 54: int j = 0;
   319  0765  01FA               	clrf	main@j
   320  0766  01FB               	clrf	main@j+1
   321                           
   322                           ;usb_switcher.c: 55: long t = 0;
   323  0767  3000               	movlw	0
   324  0768  00F9               	movwf	main@t+3
   325  0769  3000               	movlw	0
   326  076A  00F8               	movwf	main@t+2
   327  076B  3000               	movlw	0
   328  076C  00F7               	movwf	main@t+1
   329  076D  3000               	movlw	0
   330  076E  00F6               	movwf	main@t
   331                           
   332                           ;usb_switcher.c: 56: OSCCON = 0b01110010 ;
   333  076F  3072               	movlw	114
   334  0770  0021               	movlb	1	; select bank1
   335  0771  0099               	movwf	25	;volatile
   336                           
   337                           ;usb_switcher.c: 57: OPTION_REG = 0b00000000 ;
   338  0772  0195               	clrf	21	;volatile
   339                           
   340                           ;usb_switcher.c: 58: ANSELA = 0b00000000 ;
   341  0773  0023               	movlb	3	; select bank3
   342  0774  018C               	clrf	12	;volatile
   343                           
   344                           ;usb_switcher.c: 59: ANSELB = 0b00000000 ;
   345  0775  018D               	clrf	13	;volatile
   346                           
   347                           ;usb_switcher.c: 60: TRISA = 0b00000000 ;
   348  0776  0021               	movlb	1	; select bank1
   349  0777  018C               	clrf	12	;volatile
   350                           
   351                           ;usb_switcher.c: 61: TRISB = 0b11111100 ;
   352  0778  30FC               	movlw	252
   353  0779  008D               	movwf	13	;volatile
   354                           
   355                           ;usb_switcher.c: 62: TRISC = 0b00000000 ;
   356  077A  018E               	clrf	14	;volatile
   357                           
   358                           ;usb_switcher.c: 63: WPUB = 0b11111100 ;
   359  077B  30FC               	movlw	252
   360  077C  0024               	movlb	4	; select bank4
   361  077D  008D               	movwf	13	;volatile
   362                           
   363                           ;usb_switcher.c: 65: PORTA = 0b00000000 ;
   364  077E  0020               	movlb	0	; select bank0
   365  077F  018C               	clrf	12	;volatile
   366                           
   367                           ;usb_switcher.c: 66: PORTB = 0b00000000 ;
   368  0780  018D               	clrf	13	;volatile
   369                           
   370                           ;usb_switcher.c: 67: PORTC = 0b00000000 ;
   371  0781  018E               	clrf	14	;volatile
   372                           
   373                           ;usb_switcher.c: 70: while(!RB7) {
   374                           
   375                           ;usb_switcher.c: 69: while(1) {
   376  0782  2F9D               	goto	l613
   377  0783                     l605:	
   378                           ;usb_switcher.c: 71: while(!RB7) {Delay_ms(10);}
   379                           
   380  0783  300A               	movlw	10
   381  0784  00F0               	movwf	Delay_ms@DELAY_CNT
   382  0785  3000               	movlw	0
   383  0786  00F1               	movwf	Delay_ms@DELAY_CNT+1
   384  0787  3187  274D  3187   	fcall	_Delay_ms
   385  078A                     l607:	
   386  078A  0020               	movlb	0	; select bank0
   387  078B  1F8D               	btfss	13,7	;volatile
   388  078C  2F83               	goto	l605
   389                           
   390                           ;usb_switcher.c: 72: i++; if(i>7) i = 0;
   391  078D  3001               	movlw	1
   392  078E  07FC               	addwf	main@i,f
   393  078F  3000               	movlw	0
   394  0790  3DFD               	addwfc	main@i+1,f
   395  0791  087D               	movf	main@i+1,w
   396  0792  3A80               	xorlw	128
   397  0793  00F5               	movwf	??_main
   398  0794  3080               	movlw	128
   399  0795  0275               	subwf	??_main,w
   400  0796  3008               	movlw	8
   401  0797  1903               	btfsc	3,2
   402  0798  027C               	subwf	main@i,w
   403  0799  1C03               	skipc
   404  079A  2F9D               	goto	l613
   405  079B  01FC               	clrf	main@i
   406  079C  01FD               	clrf	main@i+1
   407  079D                     l613:	
   408  079D  0020               	movlb	0	; select bank0
   409  079E  1F8D               	btfss	13,7	;volatile
   410  079F  2F8A               	goto	l607
   411                           
   412                           ;usb_switcher.c: 73: };
   413                           ;usb_switcher.c: 74: if(i==0) PORTA = 0b00000001;
   414  07A0  087C               	movf	main@i,w
   415  07A1  047D               	iorwf	main@i+1,w
   416  07A2  1D03               	btfss	3,2
   417  07A3  2FA6               	goto	l619
   418  07A4  3001               	movlw	1
   419  07A5  008C               	movwf	12	;volatile
   420  07A6                     l619:	
   421                           
   422                           ;usb_switcher.c: 75: if(i==1) PORTA = 0b00000010;
   423  07A6  037C               	decf	main@i,w
   424  07A7  047D               	iorwf	main@i+1,w
   425  07A8  1D03               	btfss	3,2
   426  07A9  2FAC               	goto	l623
   427  07AA  3002               	movlw	2
   428  07AB  008C               	movwf	12	;volatile
   429  07AC                     l623:	
   430                           
   431                           ;usb_switcher.c: 76: if(i==2) PORTA = 0b00000100;
   432  07AC  3002               	movlw	2
   433  07AD  067C               	xorwf	main@i,w
   434  07AE  047D               	iorwf	main@i+1,w
   435  07AF  1D03               	btfss	3,2
   436  07B0  2FB3               	goto	l627
   437  07B1  3004               	movlw	4
   438  07B2  008C               	movwf	12	;volatile
   439  07B3                     l627:	
   440                           
   441                           ;usb_switcher.c: 77: if(i==3) PORTA = 0b00001000;
   442  07B3  3003               	movlw	3
   443  07B4  067C               	xorwf	main@i,w
   444  07B5  047D               	iorwf	main@i+1,w
   445  07B6  3008               	movlw	8
   446  07B7  1903               	btfsc	3,2
   447  07B8  008C               	movwf	12	;volatile
   448                           
   449                           ;usb_switcher.c: 78: if(i==4) PORTA = 0b00010000;
   450  07B9  3004               	movlw	4
   451  07BA  067C               	xorwf	main@i,w
   452  07BB  047D               	iorwf	main@i+1,w
   453  07BC  1D03               	btfss	3,2
   454  07BD  2FC0               	goto	l635
   455  07BE  3010               	movlw	16
   456  07BF  008C               	movwf	12	;volatile
   457  07C0                     l635:	
   458                           
   459                           ;usb_switcher.c: 79: if(i==5) PORTA = 0b00100000;
   460  07C0  3005               	movlw	5
   461  07C1  067C               	xorwf	main@i,w
   462  07C2  047D               	iorwf	main@i+1,w
   463  07C3  1D03               	btfss	3,2
   464  07C4  2FC7               	goto	l639
   465  07C5  3020               	movlw	32
   466  07C6  008C               	movwf	12	;volatile
   467  07C7                     l639:	
   468                           
   469                           ;usb_switcher.c: 80: if(i==6) PORTA = 0b01000000;
   470  07C7  3006               	movlw	6
   471  07C8  067C               	xorwf	main@i,w
   472  07C9  047D               	iorwf	main@i+1,w
   473  07CA  1D03               	btfss	3,2
   474  07CB  2FCE               	goto	l643
   475  07CC  3040               	movlw	64
   476  07CD  008C               	movwf	12	;volatile
   477  07CE                     l643:	
   478                           
   479                           ;usb_switcher.c: 81: if(i==7) PORTA = 0b10000000;
   480  07CE  3007               	movlw	7
   481  07CF  067C               	xorwf	main@i,w
   482  07D0  047D               	iorwf	main@i+1,w
   483  07D1  1D03               	btfss	3,2
   484  07D2  2FD5               	goto	l52
   485  07D3  3080               	movlw	128
   486  07D4  008C               	movwf	12	;volatile
   487  07D5                     l52:	
   488                           
   489                           ;usb_switcher.c: 82: if(i==j) t = 0;
   490  07D5  087B               	movf	main@j+1,w
   491  07D6  067D               	xorwf	main@i+1,w
   492  07D7  1D03               	skipz
   493  07D8  2FDB               	goto	u275
   494  07D9  087A               	movf	main@j,w
   495  07DA  067C               	xorwf	main@i,w
   496  07DB                     u275:	
   497  07DB  1D03               	skipz
   498  07DC  2FE5               	goto	l53
   499  07DD  3000               	movlw	0
   500  07DE  00F9               	movwf	main@t+3
   501  07DF  3000               	movlw	0
   502  07E0  00F8               	movwf	main@t+2
   503  07E1  3000               	movlw	0
   504  07E2  00F7               	movwf	main@t+1
   505  07E3  3000               	movlw	0
   506  07E4  00F6               	movwf	main@t
   507  07E5                     l53:	
   508                           
   509                           ;usb_switcher.c: 83: if(i!=j) {Delay_ms(10); t++;};
   510  07E5  087B               	movf	main@j+1,w
   511  07E6  067D               	xorwf	main@i+1,w
   512  07E7  1D03               	skipz
   513  07E8  2FEB               	goto	u285
   514  07E9  087A               	movf	main@j,w
   515  07EA  067C               	xorwf	main@i,w
   516  07EB                     u285:	
   517  07EB  1903               	skipnz
   518  07EC  2F9D               	goto	l613
   519  07ED  300A               	movlw	10
   520  07EE  00F0               	movwf	Delay_ms@DELAY_CNT
   521  07EF  3000               	movlw	0
   522  07F0  00F1               	movwf	Delay_ms@DELAY_CNT+1
   523  07F1  3187  274D  3187   	fcall	_Delay_ms
   524  07F4  3001               	movlw	1
   525  07F5  07F6               	addwf	main@t,f
   526  07F6  3000               	movlw	0
   527  07F7  3DF7               	addwfc	main@t+1,f
   528  07F8  3000               	movlw	0
   529  07F9  3DF8               	addwfc	main@t+2,f
   530  07FA  3000               	movlw	0
   531  07FB  3DF9               	addwfc	main@t+3,f
   532  07FC  2F9D               	goto	l613
   533  07FD                     __end_of_main:	
   534                           
   535                           	psect	text1
   536  074D                     __ptext1:	
   537 ;; *************** function _Delay_ms *****************
   538 ;; Defined at:
   539 ;;		line 44 in file "usb_switcher.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;  DELAY_CNT       2    0[COMMON] unsigned int 
   542 ;; Auto vars:     Size  Location     Type
   543 ;;  i               2    3[COMMON] unsigned int 
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, status,2
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   553 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   554 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   555 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   556 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   557 ;;Total ram usage:        5 bytes
   558 ;; Hardware stack levels used:    1
   559 ;; This function calls:
   560 ;;		Nothing
   561 ;; This function is called by:
   562 ;;		_main
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           
   567                           ;psect for function _Delay_ms
   568  074D                     _Delay_ms:	
   569                           
   570                           ;usb_switcher.c: 45: for (unsigned int i = 0; i < DELAY_CNT; i++) {
   571                           
   572                           ;incstack = 0
   573                           ; Regs used in _Delay_ms: [wreg+status,2]
   574  074D  01F3               	clrf	Delay_ms@i
   575  074E  01F4               	clrf	Delay_ms@i+1
   576  074F                     l29:	
   577  074F  0871               	movf	Delay_ms@DELAY_CNT+1,w
   578  0750  0274               	subwf	Delay_ms@i+1,w
   579  0751  1D03               	skipz
   580  0752  2F55               	goto	u155
   581  0753  0870               	movf	Delay_ms@DELAY_CNT,w
   582  0754  0273               	subwf	Delay_ms@i,w
   583  0755                     u155:	
   584  0755  1803               	btfsc	3,0
   585  0756  0008               	return
   586                           
   587                           ;usb_switcher.c: 46: _delay((unsigned long)((1)*(8000000/4000.0)));
   588  0757  3003               	movlw	3
   589  0758  00F2               	movwf	??_Delay_ms
   590  0759  3098               	movlw	152
   591  075A                     u297:	
   592  075A  0B89               	decfsz	9,f
   593  075B  2F5A               	goto	u297
   594  075C  0BF2               	decfsz	??_Delay_ms,f
   595  075D  2F5A               	goto	u297
   596  075E  3001               	movlw	1
   597  075F  07F3               	addwf	Delay_ms@i,f
   598  0760  3000               	movlw	0
   599  0761  3DF4               	addwfc	Delay_ms@i+1,f
   600  0762  2F4F               	goto	l29
   601  0763                     __end_of_Delay_ms:	
   602  007E                     btemp	set	126	;btemp
   603  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Delay_ms

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     445
                                              5 COMMON     9     9      0
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (1) _Delay_ms                                             5     3      2     152
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay_ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Jul 11 19:01:30 2019

            __CFG_CP$OFF 0000                       l52 07D5                       l29 074F  
                     l53 07E5                      l605 0783                      l613 079D  
                    l623 07AC                      l607 078A                      l643 07CE  
                    l635 07C0                      l627 07B3                      l619 07A6  
                    l639 07C7                      _RB7 006F                      u155 0755  
           __CFG_CPD$OFF 0000                      u275 07DB                      u285 07EB  
                    u297 075A             __CFG_BORV$LO 0000                      wreg 0009  
           __CFG_IESO$ON 0000             __CFG_LVP$OFF 0000                     _WPUB 020D  
           __CFG_WRT$OFF 0000                     _main 0763                     btemp 007E  
                   start 0002            __CFG_MCLRE$ON 0000                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _PORTA 000C                    _PORTB 000D  
                  _PORTC 000E                    _TRISA 008C                    _TRISB 008D  
                  _TRISC 008E           __CFG_FCMEN$OFF 0000                    main@i 007C  
                  main@j 007A                    main@t 0076           __CFG_BOREN$OFF 0000  
                  status 0003                    wtemp0 007E        Delay_ms@DELAY_CNT 0070  
       __end_of_Delay_ms 0763          __initialization 07FD             __end_of_main 07FD  
                 ??_main 0075           __CFG_PLLEN$OFF 0000                   _ANSELA 018C  
                 _ANSELB 018D                   _OSCCON 0099           __CFG_PWRTE$OFF 0000  
         __CFG_STVREN$ON 0000  __end_of__initialization 07FD           __pcstackCOMMON 0070  
              ?_Delay_ms 0070          __CFG_VCAPEN$OFF 0000               __pmaintext 0763  
             ??_Delay_ms 0072                  __ptext1 074D     end_of_initialization 07FD  
              Delay_ms@i 0073         __CFG_FOSC$INTOSC 0000      start_initialization 07FD  
      __size_of_Delay_ms 0016                ___latbits 0003                 _Delay_ms 074D  
          __size_of_main 009A        __CFG_CLKOUTEN$OFF 0000               _OPTION_REG 0095  
